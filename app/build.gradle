apply plugin: 'com.android.application'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDir file('libs/')
        }

        mainSqlite.setRoot('mainSqlite')

        mainSqlCipher.setRoot('mainSqlCipher')


        androidTest {
            java.srcDirs = ['tests/src']
        }

        // If you'd like to provide special files for the debug / release build variants
        // you can do so by adding files to the directories defined below
        //
        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    productFlavors {
        mainSqlite {}
        mainSqlCipher {}
    }

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 21
        multiDexEnabled true
        //testPackageName "org.storymaker.app.tests"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    // Temporarily ignore linter errors.
    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'LICENSE.txt'
    }

    dexOptions {
        jumboMode = true
        javaMaxHeapSize "4g"
    }

}

dependencies {
    // We'd use the below line to import all jars
    // but we're currently ignoring httpclientandroidlib-1.1.2.jar (provided by libonionkit),
    // and android-support-v4 (provided by ActionBarSherlock)
    //
    //compile fileTree(dir: 'libs', include: '*.jar')

    // Maven imports
    compile 'com.android.support:support-annotations:21.0.3'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.0'
    androidTestCompile 'com.android.support.test:testing-support-lib:0.1'
    androidTestCompile 'com.squareup.spoon:spoon-client:1.1.2'
//    androidTestCompile 'com.android.support:multidex-instrumentation:1.0.1'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.google.code.gson:gson:2.3'
    compile 'com.google.guava:guava:18.0'
    // Will use ActionBarDrawerToggle in BaseActivity once we migrate ActionBar -> ToolBar
    //compile 'com.android.support:appcompat-v7:21.0.2'

    // .Jar imports
    compile files('libs/apache-mime4j-0.6.jar')
    compile files('libs/apache-mime4j-0.6.jar')
    compile 'commons-io:commons-io:2.4'
    compile files('libs/commons-lang3-3.1.jar')
    compile files('libs/google-api-client-1.4.1-beta.jar')
    compile files('libs/google-api-client-googleapis-1.4.1-beta.jar')
    compile files('libs/google-api-services-latitude-v1-1.1.0-beta.jar')
    //compile files('libs/guava-r09.jar')
    compile files('libs/HockeySDK.jar')
    compile files('libs/httpmime-4.0.3.jar')
    compile files('libs/soundcloud-api-1.0.1.jar')
    compile files('libs/svg-android-1.1.jar')
    compile files('libs/wordpressjavaandroid.jar')
    compile files('libs/sqlcipher.jar')

    // Project imports
    compile project(':external:android-ffmpeg-java')
    compile project(':external:WordpressJavaAndroid')
    compile project(':external:cardsui-for-android:CardsUILib')
    compile project(':external:Android-ViewPagerIndicator:library')
    compile project(':external:RangeSeekBar:library')
    compile project(':external:NetCipher:libnetcipher')
    compile project(':external:SecureShareLib:SecureShareUILibrary')
    compile project(':external:SecureShareLib:SecureShareUILibrary:external:facebook-sdk:facebook')
    compile project(':android-iconify')
    compile project(':external:liger:lib')
}
